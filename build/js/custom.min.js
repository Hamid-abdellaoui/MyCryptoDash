function init_sidebar() {
  var a = function () {
    $RIGHT_COL.css("min-height", $(window).height());
    var a = $BODY.outerHeight(),
      b = $BODY.hasClass("footer_fixed") ? -10 : $FOOTER.height(),
      c = $LEFT_COL.eq(1).height() + $SIDEBAR_FOOTER.height(),
      d = a < c ? c : a;
    (d -= $NAV_MENU.height() + b), $RIGHT_COL.css("min-height", d);
  };
  $SIDEBAR_MENU.find("a").on("click", function (b) {
    var c = $(this).parent();
    c.is(".active")
      ? (c.removeClass("active active-sm"),
        $("ul:first", c).slideUp(function () {
          a();
        }))
      : (c.parent().is(".child_menu")
          ? $BODY.is(".nav-sm") &&
            ($SIDEBAR_MENU.find("li").removeClass("active active-sm"),
            $SIDEBAR_MENU.find("li ul").slideUp())
          : ($SIDEBAR_MENU.find("li").removeClass("active active-sm"),
            $SIDEBAR_MENU.find("li ul").slideUp()),
        c.addClass("active"),
        $("ul:first", c).slideDown(function () {
          a();
        }));
  }),
    $MENU_TOGGLE.on("click", function () {
      $BODY.hasClass("nav-md")
        ? ($SIDEBAR_MENU.find("li.active ul").hide(),
          $SIDEBAR_MENU
            .find("li.active")
            .addClass("active-sm")
            .removeClass("active"))
        : ($SIDEBAR_MENU.find("li.active-sm ul").show(),
          $SIDEBAR_MENU
            .find("li.active-sm")
            .addClass("active")
            .removeClass("active-sm")),
        $BODY.toggleClass("nav-md nav-sm"),
        a();
    }),
    $SIDEBAR_MENU
      .find('a[href="' + CURRENT_URL + '"]')
      .parent("li")
      .addClass("current-page"),
    $SIDEBAR_MENU
      .find("a")
      .filter(function () {
        return this.href == CURRENT_URL;
      })
      .parent("li")
      .addClass("current-page")
      .parents("ul")
      .slideDown(function () {
        a();
      })
      .parent()
      .addClass("active"),
    $(window).smartresize(function () {
      a();
    }),
    a(),
    $.fn.mCustomScrollbar &&
      $(".menu_fixed").mCustomScrollbar({
        autoHideScrollbar: !0,
        theme: "minimal",
        mouseWheel: { preventDefault: !0 },
      });
}

function init_charts() {
  if (
    (console.log("run_charts  typeof [" + typeof Chart + "]"),
    "undefined" != typeof Chart)
  ) {{
        if ((console.log("init_charts-trading"), $("#tradingview_6c5a1").length)) {
       new TradingView.widget({
      "autosize": true,
      "symbol": "BITSTAMP:BTCUSD",
      "interval": "1",
      "timezone": "Europe/Paris",
      "theme": "dark",
      "style": "1",
      "locale": "fr",
      "toolbar_bg": "#f1f3f6",
      "enable_publishing": false,
      "withdateranges": true,
      "allow_symbol_change": true,
      "container_id": "tradingview_6c5a1"
    });
          };}
    if ($("#financechart").length) {
      var barCount = 42;
      var initialDateStr = "01 Jan 2021 00:00 Z";

      var ctx = document.getElementById("financechart").getContext("2d");

      var chart = new Chart(ctx, {
        type: "candlestick",
        data: {
          datasets: [
            {
              label: "Candlestick $",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              data: myFinanceJson,
              borderColor: "rgb(12, 87, 71)",
              borderWidth: 1.3,
            },
          ],
        },
        options: {},
      });
    }
    if ($("#canvas_line1").length) {
      new Chart(document.getElementById("canvas_line1"), {
        type: "line",
        data: {
          labels: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
          ],
          datasets: [
            {
              label: "My First dataset",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              borderColor: "rgba(38, 185, 154, 0.7)",
              pointBorderColor: "rgba(38, 185, 154, 0.7)",
              pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(220,220,220,1)",
              pointBorderWidth: 1,
              data: [31, 74, 6, 39, 20, 85, 7],
            },
            {
              label: "My Second dataset",
              backgroundColor: "rgba(3, 88, 106, 0.3)",
              borderColor: "rgba(3, 88, 106, 0.70)",
              pointBorderColor: "rgba(3, 88, 106, 0.70)",
              pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(151,187,205,1)",
              pointBorderWidth: 1,
              data: [82, 23, 66, 9, 99, 4, 2],
            },
          ],
        },
      });
    }
    if ($("#canvas_line2").length) {
      new Chart(document.getElementById("canvas_line2"), {
        type: "line",
        data: {
          labels: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
          ],
          datasets: [
            {
              label: "My First dataset",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              borderColor: "rgba(38, 185, 154, 0.7)",
              pointBorderColor: "rgba(38, 185, 154, 0.7)",
              pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(220,220,220,1)",
              pointBorderWidth: 1,
              data: [31, 74, 6, 39, 20, 85, 7],
            },
            {
              label: "My Second dataset",
              backgroundColor: "rgba(3, 88, 106, 0.3)",
              borderColor: "rgba(3, 88, 106, 0.70)",
              pointBorderColor: "rgba(3, 88, 106, 0.70)",
              pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(151,187,205,1)",
              pointBorderWidth: 1,
              data: [82, 23, 66, 9, 99, 4, 2],
            },
          ],
        },
      });
    }
    if ($("#canvas_line3").length) {
      new Chart(document.getElementById("canvas_line3"), {
        type: "line",
        data: {
          labels: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
          ],
          datasets: [
            {
              label: "My First dataset",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              borderColor: "rgba(38, 185, 154, 0.7)",
              pointBorderColor: "rgba(38, 185, 154, 0.7)",
              pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(220,220,220,1)",
              pointBorderWidth: 1,
              data: [31, 74, 6, 39, 20, 85, 7],
            },
            {
              label: "My Second dataset",
              backgroundColor: "rgba(3, 88, 106, 0.3)",
              borderColor: "rgba(3, 88, 106, 0.70)",
              pointBorderColor: "rgba(3, 88, 106, 0.70)",
              pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(151,187,205,1)",
              pointBorderWidth: 1,
              data: [82, 23, 66, 9, 99, 4, 2],
            },
          ],
        },
      });
    }
    if ($("#caps").length) {
      new Chart(document.getElementById("caps"), {
        type: "line",
        data: {
          labels: dates,
          datasets: [
            {
              label: "24h Market capital $",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              borderColor: "rgba(38, 185, 154, 0.7)",
              pointBorderColor: "rgba(38, 185, 154, 0.7)",
              pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(220,220,220,1)",
              pointBorderWidth: 1,
              tension: 0.4,
              data: w_caps_bitcoin[1],
            },
          ],
        },
        options: {
          scales: {
            y: {
              ticks: {
                callback: function(value, index, values) {
                  return value +" $"
              },
              },
            },
          },
        },
      });
    }
    if ($("#prices").length) {
      var f = document.getElementById("prices");
      new Chart(f, {
        type: "line",
        data: {
          labels: dates,
          datasets: [
            {
              label: "Daily prices $",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              tension: 0.4,
              borderColor: "rgba(38, 185, 154, 0.7)",
              pointBorderColor: "rgba(38, 185, 154, 0.7)",
              pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(220,220,220,1)",
              pointBorderWidth: 1,
              data: w_prices_bitcoin[1],
            },
          ],
        },
        options: {
          scales: {
            y: {
              ticks: {
                callback: (value) => value +" $" ,
              },
            },
          },
        },
      });
    }
    if ($("#volumes").length) {
      var f = document.getElementById("volumes");
      new Chart(f, {
        type: "line",
        data: {
          labels: dates,
          datasets: [
            {
              label: "24h Volumes $",
              backgroundColor: "rgba(38, 185, 154, 0.31)",
              tension: 0.4,
              borderColor: "rgba(38, 185, 154, 0.7)",
              pointBorderColor: "rgba(38, 185, 154, 0.7)",
              pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(220,220,220,1)",
              pointBorderWidth: 1,
              data: w_volumes_bitcoin[1],
            },
          ],
        },
        options: {
          scales: {
            y: {
              ticks: {
                callback: (value) => value +" $" ,
              },
            },
          },
        },
      });
    }
    if ($("#mybarChart").length) {
      var f = document.getElementById("mybarChart");
      new Chart(f, {
        type: "bar",
        data: {
          labels: cryptocurrencies,
          datasets: [
            {
              data: crypto_prices,
              label: "% in 24h",
              backgroundColor: [
                "#26B99A",
                "#9B59B6",
                "#BDC3C7",
                "#455C73",
                "#3498DB",
                "#0de685",
                "#7453f3",
                "#de8a7e",
                "#fc4b03",
                "#60e6c2",
              ],
            },
          ],
          labels: [
            "btc",
            "eth",
            "bnb",
            "usdt",
            "ada",
            "dot",
            "xrp",
            "uni",
            "ltc",
            "link",
          ],
        },
        options: {
          scales: { yAxes: [{ ticks: { beginAtZero: !0 } }] },
          legend: 10,
        },
      });
    }
    if ($("#pieChart").length) {
      var f = document.getElementById("pieChart"),
        i = {
          datasets: [
            {
              data: dominance,
              backgroundColor: [
                "#26B99A",
                "#9B59B6",
                "#BDC3C7",
                "#455C73",
                "#3498DB",
                "#0de685",
                "#7453f3",
                "#de8a7e",
                "#fc4b03",
                "#60e6c2",
              ],
              label: "Market Dominance ",
            },
          ],
          labels: [
            "btc",
            "eth",
            "bnb",
            "usdt",
            "ada",
            "dot",
            "xrp",
            "uni",
            "ltc",
            "link",
          ],
        };
      new Chart(f, { data: i, type: "pie", otpions: { legend: !1 } });
    }
  }
}

function init_DataTables() {
  if ((console.log("run_datatables"), "undefined" != typeof $.fn.DataTable)) {
    console.log("init_DataTables");
    var a = function () {
      $("#datatable-buttons").length &&
        $("#datatable-buttons").DataTable({
          dom: "Blfrtip",
          buttons: [
            { extend: "copy", className: "btn-sm" },
            { extend: "csv", className: "btn-sm" },
            { extend: "excel", className: "btn-sm" },
            { extend: "pdfHtml5", className: "btn-sm" },
            { extend: "print", className: "btn-sm" },
          ],
          responsive: !0,
        });
    };
    (TableManageButtons = (function () {
      "use strict";
      return {
        init: function () {
          a();
        },
      };
    })()),
      $("#datatable").dataTable(),
      $("#datatable-keytable").DataTable({ keys: !0 }),
      $("#datatable-responsive").DataTable(),
      $("#datatable-scroller").DataTable({
        ajax: "js/datatables/json/scroller-demo.json",
        deferRender: !0,
        scrollY: 380,
        scrollCollapse: !0,
        scroller: !0,
      }),
      $("#datatable-fixed-header").DataTable({ fixedHeader: !0 });
    var b = $("#datatable-checkbox");
    b.dataTable({
      order: [[1, "asc"]],
      columnDefs: [{ orderable: !1, targets: [0] }],
    }),
      b.on("draw.dt", function () {
        $("checkbox input").iCheck({ checkboxClass: "icheckbox_flat-green" });
      }),
      TableManageButtons.init();
  }
}

!(function (a, b) {
  var c = function (a, b, c) {
    var d;
    return function () {
      function h() {
        c || a.apply(f, g), (d = null);
      }
      var f = this,
        g = arguments;
      d ? clearTimeout(d) : c && a.apply(f, g), (d = setTimeout(h, b || 100));
    };
  };
  jQuery.fn[b] = function (a) {
    return a ? this.bind("resize", c(a)) : this.trigger(b);
  };
})(jQuery, "smartresize");
var CURRENT_URL = window.location.href.split("#")[0].split("?")[0],
  $BODY = $("body"),
  $MENU_TOGGLE = $("#menu_toggle"),
  $SIDEBAR_MENU = $("#sidebar-menu"),
  $SIDEBAR_FOOTER = $(".sidebar-footer"),
  $LEFT_COL = $(".left_col"),
  $RIGHT_COL = $(".right_col"),
  $NAV_MENU = $(".nav_menu"),
  $FOOTER = $("footer"),
  randNum = function () {
    return Math.floor(21 * Math.random()) + 20;
  };
$(document).ready(function () {
  $(".collapse-link").on("click", function () {
    var a = $(this).closest(".x_panel"),
      b = $(this).find("i"),
      c = a.find(".x_content");
    a.attr("style")
      ? c.slideToggle(200, function () {
          a.removeAttr("style");
        })
      : (c.slideToggle(200), a.css("height", "auto")),
      b.toggleClass("fa-chevron-up fa-chevron-down");
  }),
    $(".close-link").click(function () {
      var a = $(this).closest(".x_panel");
      a.remove();
    });
}),
  $(document).ready(function () {
    $('[data-toggle="tooltip"]').tooltip({ container: "body" });
  }),
  $(".progress .progress-bar")[0] && $(".progress .progress-bar").progressbar(),
  $(document).ready(function () {
    if ($(".js-switch")[0]) {
      var a = Array.prototype.slice.call(
        document.querySelectorAll(".js-switch")
      );
      a.forEach(function (a) {
        new Switchery(a, { color: "#26B99A" });
      });
    }
  }),
  $(document).ready(function () {
    $(".expand").on("click", function () {
      $(this).next().slideToggle(200),
        ($expand = $(this).find(">:first-child")),
        "+" == $expand.text() ? $expand.text("-") : $expand.text("+");
    });
  }),
  "undefined" != typeof NProgress &&
    ($(document).ready(function () {
      NProgress.start();
    }),
    $(window).load(function () {
      NProgress.done();
    }));
var originalLeave = $.fn.popover.Constructor.prototype.leave;
($.fn.popover.Constructor.prototype.leave = function (a) {
  var c,
    d,
    b =
      a instanceof this.constructor
        ? a
        : $(a.currentTarget)
            [this.type](this.getDelegateOptions())
            .data("bs." + this.type);
  originalLeave.call(this, a),
    a.currentTarget &&
      ((c = $(a.currentTarget).siblings(".popover")),
      (d = b.timeout),
      c.one("mouseenter", function () {
        clearTimeout(d),
          c.one("mouseleave", function () {
            $.fn.popover.Constructor.prototype.leave.call(b, b);
          });
      }));
}),
  $("body").popover({
    selector: "[data-popover]",
    trigger: "click hover",
    delay: { show: 50, hide: 400 },
  }),
  $(document).ready(function () {
    init_sidebar(), init_charts(), init_DataTables();
  });
